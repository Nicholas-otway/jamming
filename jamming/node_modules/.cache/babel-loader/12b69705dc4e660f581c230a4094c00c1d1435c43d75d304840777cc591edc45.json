{"ast":null,"code":"var _jsxFileName = \"/Users/grimotway/Documents/ReactJammingProject/jamming/src/Components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../PlayList/Playlist\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { Spotify } from \"../util/Spotify/Spotify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchResults, setSearchResults] = useState([{\n    name: \"Cruise\",\n    artist: \"Wiz \",\n    album: \"Rolling Paper\",\n    id: \"1\"\n  }, {\n    name: \"Pure\",\n    artist: \"Wiz Khalifa\",\n    album: \"Rolling Papers\",\n    id: \"2\"\n  }]);\n  const [playlistName, setPlaylistName] = useState(\"New Track\");\n  const [playlistTracks, setPlaylistTracks] = useState([{\n    name: \"Cruis\",\n    artist: \"Wiz Kha\",\n    album: \"Rolling Stone\",\n    id: \"20\"\n  }, {\n    name: \"Cruie\",\n    artist: \"Wiz Khalif\",\n    album: \"Rolling Stne\",\n    id: \"21\"\n  }, {\n    name: \"Cuise\",\n    artist: \"Wz Khalifa\",\n    album: \"Roling Stone\",\n    id: \"22\"\n  }]);\n  function addTrack(track) {\n    const trackExisting = playlistTracks.find(traq => traq.id === track.id);\n    const trackNew = playlistTracks.concat(track);\n    if (trackExisting) {\n      console.log(\"Existed Track\");\n    } else {\n      setPlaylistTracks(trackNew);\n    }\n  }\n  ;\n  function removeTrack(track) {\n    const trackExisting = playlistTracks.filter(traq => traq.id !== track.id);\n    setPlaylistTracks(trackExisting);\n  }\n  ;\n  function playListUpdateName(name) {\n    setPlaylistName(name);\n  }\n  ;\n  function playListSave() {\n    const trackURIs = playlistTracks.map(trac => trac.uri);\n  }\n  ;\n  function search(term) {\n    Spotify;\n    console.log(term);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.highlight,\n        children: \"mmm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), \"ing\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.App,\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: Spotify.search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"App-playlist\"],\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          userSearchResults: searchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistName: playlistName,\n          playlistTracks: playlistTracks,\n          onRemove: removeTrack,\n          onChangeName: playListUpdateName,\n          onSave: playListSave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"26Fb3goiu8zQehUUtITIITNJwoM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","styles","SearchResults","Playlist","SearchBar","Spotify","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","name","artist","album","id","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","addTrack","track","trackExisting","find","traq","trackNew","concat","console","log","removeTrack","filter","playListUpdateName","playListSave","trackURIs","map","trac","uri","search","term","children","className","highlight","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","userSearchResults","onAdd","onRemove","onChangeName","onSave","_c","$RefreshReg$"],"sources":["/Users/grimotway/Documents/ReactJammingProject/jamming/src/Components/App/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../PlayList/Playlist\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { Spotify } from \"../util/Spotify/Spotify\";\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([\n    {\n      name: \"Cruise\",\n      artist: \"Wiz \",\n      album: \"Rolling Paper\",\n      id: \"1\",\n    },\n    {\n      name: \"Pure\",\n      artist: \"Wiz Khalifa\",\n      album: \"Rolling Papers\",\n      id: \"2\",\n    },\n  ]);\n\n  const [playlistName, setPlaylistName] = useState(\"New Track\");\n  const [playlistTracks, setPlaylistTracks] = useState([\n    {\n      name: \"Cruis\",\n      artist: \"Wiz Kha\",\n      album: \"Rolling Stone\",\n      id: \"20\",\n    },\n    {\n      name: \"Cruie\",\n      artist: \"Wiz Khalif\",\n      album: \"Rolling Stne\",\n      id: \"21\",\n    },\n    {\n      name: \"Cuise\",\n      artist: \"Wz Khalifa\",\n      album: \"Roling Stone\",\n      id: \"22\"\n    }\n  ]);\n\n  function addTrack(track) {\n    const trackExisting = playlistTracks.find((traq) => traq.id === track.id);\n    const trackNew = playlistTracks.concat(track);\n    if (trackExisting) {\n      console.log(\"Existed Track\");\n    } else {\n      setPlaylistTracks(trackNew);\n    }\n  };\n\n  function removeTrack(track){\n    const trackExisting = playlistTracks.filter((traq) => traq.id !== track.id);\n    setPlaylistTracks(trackExisting);\n  };\n\n  function playListUpdateName (name){\n    setPlaylistName(name);\n  };\n\n  function playListSave (){\n    const trackURIs = playlistTracks.map((trac)=> trac.uri)\n  };\n\n  function search(term){\n    Spotify\n    console.log(term)\n  };\n\n  return (\n    <div>\n      <h1>\n        Ja<span className={styles.highlight}>mmm</span>ing\n      </h1>\n      <div className={styles.App}>\n        {/* <!-- Add a SearchBar component --> */}\n        <SearchBar onSearch={Spotify.search}/>\n        <div className={styles[\"App-playlist\"]}>\n          {/* <!-- Add a SearchResults component --> */}\n          <SearchResults userSearchResults={searchResults} onAdd={addTrack}  />\n          {/* <!-- Add a Playlist component --> */}\n          <Playlist\n            playlistName={playlistName}\n            playlistTracks={playlistTracks}\n            onRemove={removeTrack}\n            onChangeName={playListUpdateName}\n            onSave={playListSave}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}