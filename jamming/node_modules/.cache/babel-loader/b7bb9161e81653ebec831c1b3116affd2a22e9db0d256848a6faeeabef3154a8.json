{"ast":null,"code":"import React,{useState}from\"react\";import styles from\"./App.module.css\";import SearchResults from\"../SearchResults/SearchResults\";import Playlist from\"../PlayList/Playlist\";import SearchBar from\"../SearchBar/SearchBar\";import{Spotify}from\"../../util/Spotify/Spotify\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[searchResults,setSearchResults]=useState([{name:\"Cruise\",artist:\"Wiz \",album:\"Rolling Paper\",id:\"1\"},{name:\"Pure\",artist:\"Wiz Khalifa\",album:\"Rolling Papers\",id:\"2\"}]);const[playlistName,setPlaylistName]=useState(\"New Track\");const[playlistTracks,setPlaylistTracks]=useState([{name:\"Cruis\",artist:\"Wiz Kha\",album:\"Rolling Stone\",id:\"20\"},{name:\"Cruie\",artist:\"Wiz Khalif\",album:\"Rolling Stne\",id:\"21\"},{name:\"Cuise\",artist:\"Wz Khalifa\",album:\"Roling Stone\",id:\"22\"}]);function addTrack(track){const trackExisting=playlistTracks.find(traq=>traq.id===track.id);const trackNew=playlistTracks.concat(track);if(trackExisting){console.log(\"Existed Track\");}else{setPlaylistTracks(trackNew);}};function removeTrack(track){const trackExisting=playlistTracks.filter(traq=>traq.id!==track.id);setPlaylistTracks(trackExisting);};function playListUpdateName(name){setPlaylistName(name);};function playListSave(){const trackURIs=playlistTracks.map(trac=>trac.uri);};function search(term){Spotify.search(term).then(result=>setSearchResults(result));console.log(term);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Ja\",/*#__PURE__*/_jsx(\"span\",{className:styles.highlight,children:\"mmm\"}),\"ing\"]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.App,children:[/*#__PURE__*/_jsx(SearchBar,{onSearch:Spotify.search}),/*#__PURE__*/_jsxs(\"div\",{className:styles[\"App-playlist\"],children:[/*#__PURE__*/_jsx(SearchResults,{userSearchResults:searchResults,onAdd:addTrack}),/*#__PURE__*/_jsx(Playlist,{playlistName:playlistName,playlistTracks:playlistTracks,onRemove:removeTrack,onChangeName:playListUpdateName,onSave:playListSave})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","styles","SearchResults","Playlist","SearchBar","Spotify","jsx","_jsx","jsxs","_jsxs","App","searchResults","setSearchResults","name","artist","album","id","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","addTrack","track","trackExisting","find","traq","trackNew","concat","console","log","removeTrack","filter","playListUpdateName","playListSave","trackURIs","map","trac","uri","search","term","then","result","children","className","highlight","onSearch","userSearchResults","onAdd","onRemove","onChangeName","onSave"],"sources":["/Users/grimotway/Documents/ReactJammingProject/jamming/src/Components/App/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../PlayList/Playlist\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { Spotify } from \"../../util/Spotify/Spotify\";\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([\n    {\n      name: \"Cruise\",\n      artist: \"Wiz \",\n      album: \"Rolling Paper\",\n      id: \"1\",\n    },\n    {\n      name: \"Pure\",\n      artist: \"Wiz Khalifa\",\n      album: \"Rolling Papers\",\n      id: \"2\",\n    },\n  ]);\n\n  const [playlistName, setPlaylistName] = useState(\"New Track\");\n  const [playlistTracks, setPlaylistTracks] = useState([\n    {\n      name: \"Cruis\",\n      artist: \"Wiz Kha\",\n      album: \"Rolling Stone\",\n      id: \"20\",\n    },\n    {\n      name: \"Cruie\",\n      artist: \"Wiz Khalif\",\n      album: \"Rolling Stne\",\n      id: \"21\",\n    },\n    {\n      name: \"Cuise\",\n      artist: \"Wz Khalifa\",\n      album: \"Roling Stone\",\n      id: \"22\"\n    }\n  ]);\n\n  function addTrack(track) {\n    const trackExisting = playlistTracks.find((traq) => traq.id === track.id);\n    const trackNew = playlistTracks.concat(track);\n    if (trackExisting) {\n      console.log(\"Existed Track\");\n    } else {\n      setPlaylistTracks(trackNew);\n    }\n  };\n\n  function removeTrack(track){\n    const trackExisting = playlistTracks.filter((traq) => traq.id !== track.id);\n    setPlaylistTracks(trackExisting);\n  };\n\n  function playListUpdateName (name){\n    setPlaylistName(name);\n  };\n\n  function playListSave (){\n    const trackURIs = playlistTracks.map((trac)=> trac.uri)\n  };\n\n  function search(term){\n    Spotify.search(term).then(result => setSearchResults(result));\n    console.log(term)\n  };\n\n  return (\n    <div>\n      <h1>\n        Ja<span className={styles.highlight}>mmm</span>ing\n      </h1>\n      <div className={styles.App}>\n        {/* <!-- Add a SearchBar component --> */}\n        <SearchBar onSearch={Spotify.search}/>\n        <div className={styles[\"App-playlist\"]}>\n          {/* <!-- Add a SearchResults component --> */}\n          <SearchResults userSearchResults={searchResults} onAdd={addTrack}  />\n          {/* <!-- Add a Playlist component --> */}\n          <Playlist\n            playlistName={playlistName}\n            playlistTracks={playlistTracks}\n            onRemove={removeTrack}\n            onChangeName={playListUpdateName}\n            onSave={playListSave}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}